"VIMRC config file for Qandi"

" Vundle stuff
set nocompatible	" be iMproved required
filetype off		" required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin('~/.vim/bundle')

" let vundle manage vundle, required
Plugin 'gmarik/Vundle.vim'


" Install YCM
Plugin 'Valloric/YouCompleteMe'
let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']

"Tab velger hvilken snippet
"let g:ycm_key_list_select_completion = "<tab>"

" Install VIM airline
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
let g:airline_theme='powerlineish'

" Install latexlivepreview
Plugin 'xuhdev/vim-latex-live-preview' 

" Install bracketpairthing..
"Plugin 'jiangmiao/auto-pairs'

"Autopairs fucked up my bindings, so
"here goes autoclose;
Plugin 'Townk/vim-autoclose'

" Install vim-addon-mw-utils snipmate helper
"Plugin 'MarcWeber/vim-addon-mw-utils'

" Install tilb_vim snipmate helper
"Plugin 'tomtom/tlib_vim'

" Snippets for snipmate
Bundle 'honza/vim-snippets'

" Install snipmate
"Plugin 'garbas/vim-snipmate'

"Installing Ultisnips(Instead of Snipmate)
Plugin 'SirVer/ultisnips'
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" Install syntastic
"Plugin 'scrooloose/syntastic'

" Install surround
"Plugin 'tpope/vim-surround'

" Install unimpaired
"Plugin 'tpope/vim-unimpaired'

" Install fugitive
Plugin 'tpope/vim-fugitive'

" Install nerdcommenter
Plugin 'scrooloose/nerdcommenter'

" Install nerdtree
Plugin 'scrooloose/nerdtree'

call vundle#end()	" required

"Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

"Let latex documents be latex documents..Dont change them to plaintext!
let g:tex_flavor='latex'


" Setting mapleader
let mapleader = ","
let maplocalleader = "-"

"Editing vimrc on the go
"------------------------------"
" Source the vimrc file after saving it
nnoremap <leader>sv :source $MYVIMRC<CR>

" Edit the vimrc file with mapleader and v
nnoremap <leader>ev :vsplit $MYVIMRC<CR>


" Split screen vertical and open a new file
nnoremap <leader>s :vne<cr>:e

" Split screen horizontal and open a new file
nnoremap <leader>v :new<cr>:e

"Plugins"
"------------------------------"

"Activate pathogen"
"execute pathogen#infect()

" Map NERDTree hotkey
nmap <leader>nt :NERDTreeToggle<cr>


" Airline
" Set statusline at all times
set laststatus=2

"------------------------------"
"------------------------------"



" Abbreviations
"
" Email
:iabbrev eemail sofus96@gmail.com
" Signature
:iabbrev ssig --<cr>Sofus Flat√∏y Pedersen<cr>sofus96@gmail.com







"Indentation, folding, tabs, maps  and spaces"
"------------------------------"

"Adds indentation for filetypes"
filetype plugin indent on
filetype plugin on

" Enables indentation folding
:set foldmethod=manual

" Map space to folding
nnoremap <space> za
vnoremap <space> zf

" Bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e
" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv


" makes H go to beginning of line
nnoremap H 0
nnoremap L $

" Map jk in insertmode to esc
inoremap jk <esc> 

inoremap <esc> <nop>
inoremap <Left> <nop>
inoremap <Right> <nop>
inoremap <Up> <nop>
inoremap <Down> <nop>

nnoremap <Left> <nop>
nnoremap <Right> <nop>
nnoremap <Up> <nop>
nnoremap <Down> <nop>

" Make current word UPPERCASE while in insert mode
inoremap <localleader><u> <esc>bveUea

" Make current word UPPERCASE while in normal mode
nnoremap <localleader><u> LWBVEU

" Wraps visual selection in quotes
vnoremap <leader>" <esc>`<i"<esc>`>a"<esc>
" Wraps visual selection in single quotes
vnoremap <leader>' <esc>`<i'<esc>`>a'<esc>

" Make splits easier to navigate, ctrl-(hjkl) instead of ctrl-w an then stuff
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>



" Highlight trailing whitespace
match ErrorMsg '\s\+$'
"
" Map localleader and c to comment current line in python
:augroup pycomment
autocmd!
autocmd FileType python nnoremap <buffer> <localleader>c I#<esc>
:augroup END

"
" Map <F5> to run the current file
:augroup pyrun
autocmd!
autocmd FileType python nnoremap <buffer> <F5> :exec '!python' shellescape(@%, 1)<cr>
:augroup END

"------------------------------"
"------------------------------"

"Colors and colorschemes"
"------------------------------"

"Enables colorschemes"
syntax enable

"Enable 256 color
set t_Co=256

"Molokai colorscheme"
colorscheme badwolf

"------------------------------"
"------------------------------"

"Line numbers"
"------------------------------"
:set relativenumber
:set number
"------------------------------"
"------------------------------"

" Files
" -----------------------------"
"  No swapfiles
:set noswapfile


"------------------------------"
"MOUSE/input/output

"enable Mouse
:set mouse=a

"Add YCM FixIt to shortcut
map <F9> :YcmCompleter FixIt<CR>

"Updatetime for Latex livepreview
set updatetime=1000

"Mark Line 80 to act as a guide for code width
set cc=80

"Shortcuts for bubbling lines up and down
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
inoremap <C-k> <Esc>:m .-2<CR>==gi
inoremap <C-j> <Esc>:m .+1<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv''

"numero uno
